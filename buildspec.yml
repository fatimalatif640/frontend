# version: 0.2
# phases:
#   install:
#     runtime-versions:
#       nodejs: 18
#     commands:
#       - echo "Installing dependencies..."
#       - npm install -g typescript@latest
#       - npm install
#       - npm -v
#       - node -v
#       - |
#         aws ssm get-parameters-by-path \
#             --path "/rfp/prod/FE" \
#             --recursive \
#             --with-decryption \
#             --query "Parameters[].[Name,Value]" \
#             --output text | while read name value; do
#             key=$(basename "$name")
#             echo "${key}=${value}" >> .env
#         done
#       - echo "Environment variables written to .env file:"
#       - cat .env

#   pre_build:
#     commands:
#       - echo "Validating environment variables..."
#       - test -s .env || (echo "Missing .env file or empty"; exit 1)
#       - npm install

#   build:
#     commands:
#       - echo "Building the Angular application..."
#       - export $(cat .env | xargs) && npm run build

#   post_build:
#     commands:
#       - echo "Build complete. Preparing to upload to S3..."
#       - ls -la
#       - ls dist/ -la
#       - aws s3 sync dist/ s3://rfp-dev-app-frontend-us-east-1-414432075221 --delete
#       - aws s3 sync dist/ s3://$S3_BUCKET_NAME --delete

# artifacts:
#   files:
#     - '**/*'
#   base-directory: dist/

# cache:
#   paths:
#     - node_modules/**


version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 14 # Use Node.js version 14
    commands:
      - echo "Installing dependencies..."
      - npm install # Install project dependencies
      - npm -v # Verify npm version
      - node -v # Verify Node.js version
      - |
        aws ssm get-parameters-by-path \
            --path "/todo/dev/FE" \
            --recursive \
            --with-decryption \
            --query "Parameters[].[Name,Value]" \
            --output text | while read name value; do
            key=$(basename "$name")
            echo "${key}=${value}" >> .env.development
        done
      - echo "Environment variables written to .env.development file:"
      - cat .env.development

  pre_build:
    commands:
      - echo "Validating environment variables..."
      - test -s .env.development || (echo "Missing .env.development file or empty"; exit 1)
      - npm install # Ensure all dependencies are installed

  build:
    commands:
      - echo "Building the React application..."
      - npm install react-scripts@latest
      - export $(cat .env.development| xargs) && npm run build # Build the React app using environment variables

  post_build:
    commands:
      - echo "Build complete. Preparing to upload to S3..."
      - ls -la # List all files for debugging
      - ls build/ -la # List files in the build directory
      - aws s3 sync build/ s3://todo-dev-app-frontend-us-west-1-739987125076 --delete # Upload files to S3 bucket
      - aws s3 sync build/ s3://todo-dev-app-frontend-us-west-1-739987125076 --delete # Alternative bucket (if needed)

artifacts:
  files:
    - '**/*' # Include all files in the build directory
  base-directory: build/ # Specify the build directory as the base

cache:
  paths:
    - node_modules/** # Cache Node.js dependencies for faster builds
